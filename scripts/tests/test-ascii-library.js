#!/usr/bin/env node

const fs = require('fs').promises;
const path = require('path');
const { exec } = require('child_process');

async function test() {
  console.log('\nüèÅ BUMBA ASCII Component Library Test');
  console.log('=====================================\n');
  
  const { getInstance } = require('./src/core/notion/bumba-component-library-ascii');
  const library = getInstance();
  
  // Create demo dashboard with pure ASCII components
  const html = library.createDashboard();
  
  const dir = path.join(process.cwd(), '.bumba', 'notion-simulation', 'dashboards');
  await fs.mkdir(dir, { recursive: true });
  
  const file = path.join(dir, `ascii-library-${Date.now()}.html`);
  await fs.writeFile(file, html);
  
  console.log('üèÅ ASCII Component Library Dashboard Created');
  console.log('üìÅ ' + file);
  
  console.log('\nüìä Pure ASCII Components:');
  console.log('  ‚Ä¢ Box-drawing characters for borders');
  console.log('  ‚Ä¢ Dots and colons for line charts');
  console.log('  ‚Ä¢ Vertical bars for sparklines');  
  console.log('  ‚Ä¢ Horizontal lines for bar charts');
  console.log('  ‚Ä¢ Pipe characters for gauges');
  console.log('  ‚Ä¢ Monospace ASCII tables');
  console.log('  ‚Ä¢ ASCII art support');
  
  console.log('\nüî¥ Sampler-Style Features:');
  console.log('  ‚Ä¢ Clean terminal aesthetic');
  console.log('  ‚Ä¢ Proper character alignment');
  console.log('  ‚Ä¢ Color-coded data series');
  console.log('  ‚Ä¢ Grid lines in charts');
  console.log('  ‚Ä¢ Exact sampler layouts');
  
  console.log('\nOpening in browser...');
  exec(`open "${file}"`);
}

test().catch(console.error);